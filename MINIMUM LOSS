#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'minimumLoss' function below.
#
# The function is expected to return an INTEGER.
# The function accepts LONG_INTEGER_ARRAY price as parameter.
#

def minimumLoss(price):
    # Attach original indices to prices
    indexed = [(p, i) for i, p in enumerate(price)]
    # Sort by price
    indexed.sort(key=lambda x: x[0])
    
    min_loss = float('inf')
    
    for i in range(len(indexed) - 1):
        # Only consider if higher price was bought earlier
        if indexed[i][1] > indexed[i+1][1]:
            loss = indexed[i+1][0] - indexed[i][0]
            if loss < min_loss:
                min_loss = loss
    
    return min_loss


if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input().strip())

    price = list(map(int, input().rstrip().split()))

    result = minimumLoss(price)

    fptr.write(str(result) + '\n')

    fptr.close()
